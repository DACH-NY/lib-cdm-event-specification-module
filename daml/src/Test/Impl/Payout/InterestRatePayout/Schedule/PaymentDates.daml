-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Test.Impl.Payout.InterestRatePayout.Schedule.PaymentDates where

import DA.Assert
import DA.Date as D
import Org.Isda.Cdm.EventSpecificationModule.Impl.Contract.Payout.InterestRatePayout.Schedule.PaymentDates
import Org.Isda.Cdm.EventSpecificationModule.Types.All hiding (length)
import Test.Examples
import Test.ReferenceData()
import Test.Impl.Payout.InterestRatePayout.Schedule.CalculationPeriodDates
import Test.Impl.Payout.InterestRatePayout.Schedule.ResetDates
import Daml.Script (script)

emptyPaymentCalculationPeriod : PaymentCalculationPeriod
emptyPaymentCalculationPeriod = PaymentCalculationPeriod {
                                  id = None,
                                  adjustedPaymentDate = None,
                                  calculationPeriod = [],
                                  discountFactor = None,
                                  fixedPaymentAmount = None,
                                  forecastPaymentAmount = None,
                                  presentValueAmount = None,
                                  unadjustedPaymentDate = None
                                }

expectedResultPcps : [PaymentCalculationPeriod]
expectedResultPcps =
  [ emptyPaymentCalculationPeriod {
      id = None,
      unadjustedPaymentDate = Some $ D.date 2018 Dec 5,
      adjustedPaymentDate = Some $ D.date 2018 Dec 5,
      calculationPeriod =
        [ emptyCalculationPeriod {
          unadjustedStartDate = Some $ D.date 2018 Nov 15,
          unadjustedEndDate = Some $ D.date 2018 Nov 30,
          adjustedStartDate = Some $ D.date 2018 Nov 15,
          adjustedEndDate = Some $ D.date 2018 Nov 30,
          floatingRateDefinition = Some
            emptyFloatingRateDefinition {
              rateObservation =
                [ emptyRateObservation {
                    adjustedFixingDate = Some $ D.date 2018 Nov 8,
                    resetDate = Some $ D.date 2018 Nov 15
                  }
                ]
            }
          }
        ]
    }
  , emptyPaymentCalculationPeriod {
      unadjustedPaymentDate = Some $ D.date 2019 Mar 5,
      adjustedPaymentDate = Some $ D.date 2019 Mar 5,
      calculationPeriod =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2018 Nov 30,
            unadjustedEndDate = Some $ D.date 2019 Feb 28,
            adjustedStartDate = Some $ D.date 2018 Nov 30,
            adjustedEndDate = Some $ D.date 2019 Feb 28,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2018 Nov 23,
                      resetDate = Some $ D.date 2018 Nov 30
                    }
                  ]
              }
          }
        ]
    }
  , emptyPaymentCalculationPeriod {
      unadjustedPaymentDate = Some $ D.date 2019 Jun 4,
      adjustedPaymentDate = Some $ D.date 2019 Jun 4,
      calculationPeriod =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Feb 28,
            unadjustedEndDate = Some $ D.date 2019 May 30,
            adjustedStartDate = Some $ D.date 2019 Feb 28,
            adjustedEndDate = Some $ D.date 2019 May 30,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Feb 21,
                      resetDate = Some $ D.date 2019 Feb 28
                    }
                  ]
              }
          }
        ]
    }
  , emptyPaymentCalculationPeriod {
      unadjustedPaymentDate = Some $ D.date 2019 Sep 4,
      adjustedPaymentDate = Some $ D.date 2019 Sep 4,
      calculationPeriod =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 May 30,
            unadjustedEndDate = Some $ D.date 2019 Aug 30,
            adjustedStartDate = Some $ D.date 2019 May 30,
            adjustedEndDate = Some $ D.date 2019 Aug 30,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 May 23,
                      resetDate = Some $ D.date 2019 May 30
                    }
                  ]
              }
          }
        ]
    }
  , emptyPaymentCalculationPeriod {
      unadjustedPaymentDate = Some $ D.date 2019 Dec 4,
      adjustedPaymentDate = Some $ D.date 2019 Dec 4,
      calculationPeriod =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Aug 30,
            unadjustedEndDate = Some $ D.date 2019 Nov 30,
            adjustedStartDate = Some $ D.date 2019 Aug 30,
            adjustedEndDate = Some $ D.date 2019 Nov 29,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Aug 23,
                      resetDate = Some $ D.date 2019 Aug 30
                    }
                  ]
              }
          }
        ]
    }
  , emptyPaymentCalculationPeriod {
      unadjustedPaymentDate = Some $ D.date 2019 Dec 20,
      adjustedPaymentDate = Some $ D.date 2019 Dec 20,
      calculationPeriod =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Nov 30,
            unadjustedEndDate = Some $ D.date 2019 Dec 15,
            adjustedStartDate = Some $ D.date 2019 Nov 29,
            adjustedEndDate = Some $ D.date 2019 Dec 16,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Nov 22,
                      resetDate = Some $ D.date 2019 Nov 29
                    }
                  ]
              }
          }
        ]
    }
  ]

main = script do
  res <- generatePaymentCalculationPeriods cpdsBothStub3M (Some rds3M) (Some pds3M)
  res === expectedResultPcps
