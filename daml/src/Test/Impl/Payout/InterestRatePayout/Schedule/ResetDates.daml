-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Test.Impl.Payout.InterestRatePayout.Schedule.ResetDates where

import DA.Assert
import DA.Date as D
import Org.Isda.Cdm.EventSpecificationModule.Impl.Contract.Payout.InterestRatePayout.Schedule.ResetDates
import Org.Isda.Cdm.EventSpecificationModule.Types.All hiding (length)
import Test.Examples
import Test.ReferenceData()
import Test.Impl.Payout.InterestRatePayout.Schedule.CalculationPeriodDates
import Daml.Script (script)

emptyFloatingRateDefinition : FloatingRateDefinition
emptyFloatingRateDefinition = FloatingRateDefinition {
                                calculatedRate = None,
                                capRate = [],
                                floatingRateMultiplier = None,
                                floorRate = [],
                                rateObservation = [],
                                spread = None
                              }

emptyRateObservation : RateObservation
emptyRateObservation = RateObservation {
                        id = None,
                        adjustedFixingDate = None,
                        forecastRate = None,
                        observationWeight = Some 0,
                        observedRate = None,
                        rateReference = None,
                        resetDate = None,
                        treatedForecastRate = None,
                        treatedRate = None
                      }

main = script do
  let expectedResult =
        [ emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2018 Nov 15,
            unadjustedEndDate = Some $ D.date 2018 Nov 30,
            adjustedStartDate = Some $ D.date 2018 Nov 15,
            adjustedEndDate = Some $ D.date 2018 Nov 30,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2018 Nov 8,
                      resetDate = Some $ D.date 2018 Nov 15
                    }
                  ]
              }
          }
        , emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2018 Nov 30,
            unadjustedEndDate = Some $ D.date 2019 Feb 28,
            adjustedStartDate = Some $ D.date 2018 Nov 30,
            adjustedEndDate = Some $ D.date 2019 Feb 28,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2018 Nov 23,
                      resetDate = Some $ D.date 2018 Nov 30
                    }
                  ]
              }
          }
        , emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Feb 28,
            unadjustedEndDate = Some $ D.date 2019 May 30,
            adjustedStartDate = Some $ D.date 2019 Feb 28,
            adjustedEndDate = Some $ D.date 2019 May 30,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Feb 21,
                      resetDate = Some $ D.date 2019 Feb 28
                    }
                  ]
              }
          }
        , emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 May 30,
            unadjustedEndDate = Some $ D.date 2019 Aug 30,
            adjustedStartDate = Some $ D.date 2019 May 30,
            adjustedEndDate = Some $ D.date 2019 Aug 30,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 May 23,
                      resetDate = Some $ D.date 2019 May 30
                    }
                  ]
              }
          }
        , emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Aug 30,
            unadjustedEndDate = Some $ D.date 2019 Nov 30,
            adjustedStartDate = Some $ D.date 2019 Aug 30,
            adjustedEndDate = Some $ D.date 2019 Nov 29,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Aug 23,
                      resetDate = Some $ D.date 2019 Aug 30
                    }
                  ]
              }
          }
        , emptyCalculationPeriod {
            unadjustedStartDate = Some $ D.date 2019 Nov 30,
            unadjustedEndDate = Some $ D.date 2019 Dec 15,
            adjustedStartDate = Some $ D.date 2019 Nov 29,
            adjustedEndDate = Some $ D.date 2019 Dec 16,
            floatingRateDefinition = Some
              emptyFloatingRateDefinition {
                rateObservation =
                  [ emptyRateObservation {
                      adjustedFixingDate = Some $ D.date 2019 Nov 22,
                      resetDate = Some $ D.date 2019 Nov 29
                    }
                  ]
              }
          }
        ]
  res <- generateResetPeriods cpdsBothStub3M (Some rds3M)
  res === expectedResult
