daml 1.2
module ISDA.CDM.Auxiliary.Event where

import DA.Optional
import ISDA.CDM.Types.All

-- | Get all 'after' contracts from event
getAfterContracts : Event -> [Contract]
getAfterContracts event =
  let pe = event.primitive
      termsChange = optionalToList pe.termsChange
      exe = optionalToList pe.exercise

  in concatMap (\a -> a.after.contract) pe.allocation
      ++ map (\e -> e.after.contract) exe
      ++ map (\i -> i.after.contract) pe.inception
      ++ mapOptional (\qc -> qc.after.contract) pe.quantityChange
      ++ mapOptional (\tc -> tc.after.contract) termsChange
