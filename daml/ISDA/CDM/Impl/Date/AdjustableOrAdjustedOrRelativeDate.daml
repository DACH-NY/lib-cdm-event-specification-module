daml 1.2
module ISDA.CDM.Impl.Date.AdjustableOrAdjustedOrRelativeDate where

import DA.Optional
import ISDA.CDM.Impl.Date.BusinessDayAdjustments
import ISDA.CDM.Impl.Utils
import ISDA.CDM.Types.All

-- | Check AdjustableOrAdjustedOrRelativeDate for non-supported features
checkAdjustableOrAdjustedOrRelativeDate : AdjustableOrAdjustedOrRelativeDate -> AdjustableOrAdjustedOrRelativeDate
checkAdjustableOrAdjustedOrRelativeDate aar | isSome aar.relativeDate = throwNotSupportedError "AdjustableOrAdjustedOrRelativeDate.relativeDate"
checkAdjustableOrAdjustedOrRelativeDate aar = aar

-- | Get adjusted date from AdjustableOrAdjustedOrRelativeDate
getAdjustedDate : (Fetch f) => AdjustableOrAdjustedOrRelativeDate -> f Date
getAdjustedDate (checkAdjustableOrAdjustedOrRelativeDate -> aar)
  | Some adjustedDate <- aar.adjustedDate = return adjustedDate.value
  | otherwise = adjustDate (fromOptional defaultAdj aar.dateAdjustments) $ getUnadjustedDate aar
      where
        defaultAdj = BusinessDayAdjustments
                      { id = None
                      , businessCenters = None
                      , businessDayConvention = BusinessDayConventionEnum_NONE
                      }

-- | Get unadjusted date from AdjustableOrAdjustedOrRelativeDate
getUnadjustedDate : AdjustableOrAdjustedOrRelativeDate -> Date
getUnadjustedDate aar = get "unadjustedDate" aar.unadjustedDate
